# Kickstart file automatically generated by anaconda.
#version=DEVEL

install

#Default is graphical install
text

#Net install URL
url --url="{{ provisioning_net_install_url }}"

#Keyboard layout
lang en_US.UTF-8
keyboard us

#Timezone
timezone --utc America/Argentina/Buenos_Aires

#Network configuration
#Download image from WAN
{% if network_ether_interfaces is defined %}
{% for interface in network_ether_interfaces %}
{% if interface.device == provisioning_net_install_eth %}
network --bootproto=static --onboot=yes --device={{ interface.device }} --ip={{ interface.address }} --netmask={{ interface.netmask }} --gateway={{ interface.gateway }} --nameserver=8.8.8.8
{% endif %}
{% endfor %}
{% endif %}
{% if network_bridge_interfaces is defined %}
{% for bridge in network_bridge_interfaces %}
{% for port in bridge.ports %}
{% if port.device == provisioning_net_install_eth %}
network --bootproto=static --onboot=yes --device={{ port.device }} --ip={{ bridge.address }} --netmask={{ bridge.netmask }} --gateway={{ bridge.gateway }} --nameserver=8.8.8.8
{% endif %}
{% endfor %}
{% endfor %}
{% endif %}

#Disable LAN on next boot
network --noipv6 --onboot no --device {{ provisioning_dhcp_boot_eth }} --bootproto dhcp

#Encrypted password
authconfig --enableshadow --passalgo={{ provisioning_root_passalgo }}
rootpw  --iscrypted {{ provisioning_root_default_password }}

#Disable selinux
selinux --disabled

#Configure storage layout
#TODO

{% if provisioning_storage_layout == "RAID10" %}

bootloader --location=mbr --driveorder=sda,sdb,sdc,sdd --append="crashkernel=auto rhgb quiet"

zerombr
clearpart --drives=sda,sdb,sdc,sdd --all --initlabel

part raid.008033 --asprimary --size=512 --ondrive=sda
part raid.008034 --asprimary --size={{ provisioning_total_volgroup_size }} --ondrive=sda

part raid.008049 --asprimary --size=512 --ondrive=sdb
part raid.008050 --asprimary --size={{ provisioning_total_volgroup_size }} --ondrive=sdb

part raid.008065 --asprimary --size=512 --ondrive=sdc
part raid.008066 --asprimary --size={{ provisioning_total_volgroup_size }} --ondrive=sdc

part raid.008081 --asprimary --size=512 --ondrive=sdd
part raid.008082 --asprimary --size={{ provisioning_total_volgroup_size }} --ondrive=sdd

#Bootable partitions cannot be on an ext4 filesystem
raid /boot --fstype=ext3 --level=1 --device=md0 raid.008033 raid.008049

raid pv.009001 --level=10 --device=md1 raid.008034 raid.008050 raid.008066 raid.008082

volgroup {{ provisioning_vgname }} --pesize=4096 pv.009001

{% if provisioning_configure_swap | bool == true %}
logvol swap --name=LogVol00 --vgname={{ provisioning_vgname }} --size=4096
{% endif %}
logvol / --fstype=ext4 --name=LogVol01 --vgname={{ provisioning_vgname }} --size=81920

{% endif %}

{% if provisioning_storage_layout == "2xRAID1" %}

bootloader --location=mbr --driveorder=sda,sdb,sdc,sdd --append="crashkernel=auto rhgb quiet"

zerombr
clearpart --drives=sda,sdb,sdc,sdd --all --initlabel

part raid.008033 --asprimary --size=512 --ondrive=sda
part raid.008034 --asprimary --size={{ provisioning_total_volgroup_size }} --ondrive=sda

part raid.008049 --asprimary --size=512 --ondrive=sdb
part raid.008050 --asprimary --size={{ provisioning_total_volgroup_size }} --ondrive=sdb

part raid.008065 --asprimary --size=512 --ondrive=sdc
part raid.008066 --asprimary --size={{ provisioning_total_volgroup_size }} --ondrive=sdc

part raid.008081 --asprimary --size=512 --ondrive=sdd
part raid.008082 --asprimary --size={{ provisioning_total_volgroup_size }} --ondrive=sdd

#Bootable partitions cannot be on an ext4 filesystem
raid /boot --fstype=ext3 --level=1 --device=md0 raid.008033 raid.008049

raid pv.009001 --level=1 --device=md1 raid.008034 raid.008050
raid pv.009011 --level=1 --device=md2 raid.008066 raid.008082

volgroup VolGroup00 --pesize=4096 pv.009001
volgroup VolGroup01 --pesize=4096 pv.009011

{% if provisioning_configure_swap | bool == true %}
logvol swap --name=LogVol00 --vgname=VolGroup00 --size=4096
{% endif %}
logvol / --fstype=ext4 --name=LogVol01 --vgname=VolGroup00 --size=81920

{% endif %}

{% if provisioning_storage_layout == "RAID5" %}

bootloader --location=mbr --driveorder=sda,sdb,sdc,sdd --append="crashkernel=auto rhgb quiet"

zerombr
clearpart --drives=sda,sdb,sdc,sdd --all --initlabel

part raid.008033 --asprimary --size=512 --ondrive=sda
part raid.008034 --asprimary --size={{ provisioning_total_volgroup_size }} --ondrive=sda

part raid.008049 --asprimary --size=512 --ondrive=sdb
part raid.008050 --asprimary --size={{ provisioning_total_volgroup_size }} --ondrive=sdb

part raid.008065 --asprimary --size=512 --ondrive=sdc
part raid.008066 --asprimary --size={{ provisioning_total_volgroup_size }} --ondrive=sdc

part raid.008081 --asprimary --size=512 --ondrive=sdd
part raid.008082 --asprimary --size={{ provisioning_total_volgroup_size }} --ondrive=sdd

#Bootable partitions cannot be on an ext4 filesystem
raid /boot --fstype=ext3 --level=1 --device=md0 raid.008033 raid.008049

raid pv.009001 --level=5 --device=md1 raid.008034 raid.008050 raid.008066 raid.008082

volgroup VolGroup --pesize=4096 pv.009001

{% if provisioning_configure_swap | bool == true %}
logvol swap --name=LogVol00 --vgname=VolGroup00 --size=4096
{% endif %}
logvol / --fstype=ext4 --name=LogVol01 --vgname=VolGroup --size=81920

{% endif %}

{% if provisioning_storage_layout == "RAID1" %}

bootloader --location=mbr --driveorder=sda,sdb --append="crashkernel=auto rhgb quiet"

zerombr
clearpart --drives=sda,sdb --all --initlabel

part raid.008033 --asprimary --size=512 --ondrive=sda
part raid.008034 --asprimary --size={{ provisioning_total_volgroup_size }} --ondrive=sda

part raid.008049 --asprimary --size=512 --ondrive=sdb
part raid.008050 --asprimary --size={{ provisioning_total_volgroup_size }} --ondrive=sdb

#Bootable partitions cannot be on an ext4 filesystem
raid /boot --fstype=ext3 --level=1 --device=md0 raid.008033 raid.008049

raid pv.009001 --level=1 --device=md1 raid.008034 raid.008050

volgroup VolGroup00 --pesize=4096 pv.009001

{% if provisioning_configure_swap | bool == true %}
logvol swap --name=LogVol00 --vgname=VolGroup00 --size=4096
{% endif %}
logvol / --fstype=ext4 --name=LogVol01 --vgname=VolGroup00 --size=81920

{% endif %}

{% if provisioning_storage_layout == "JBOD1" %}

bootloader --location=mbr --driveorder=sda,sdb --append="crashkernel=auto rhgb quiet net.ifnames=0 biosdevname=0"

zerombr
clearpart --drives=sda,sdb --all

{% if provisioning_boot_gpt | bool == true %}
part biosboot --fstype=biosboot --size=1 --ondrive=sda
part biosboot --fstype=biosboot --size=1 --ondrive=sdb
{% endif %}

part raid.008033 --asprimary --size=512 --ondrive=sda
part raid.008034 --asprimary --size={{ provisioning_total_volgroup_size }} --ondrive=sda

part raid.008049 --asprimary --size=512 --ondrive=sdb
part raid.008050 --asprimary --size={{ provisioning_total_volgroup_size }} --ondrive=sdb

raid /boot --fstype=xfs --level=1 --device=md0 raid.008033 raid.008049

raid pv.009001 --level=1 --device=md1 raid.008034 raid.008050

volgroup VolGroup00 --pesize={{ provisioning_storage_volgroup_pe_size }} pv.009001

{% if provisioning_configure_swap | bool == true %}
logvol swap --name=LogVol00 --vgname=VolGroup00 --size=4096
{% endif %}
logvol / --fstype=xfs --name=LogVol01 --vgname=VolGroup00 --size={{ provisioning_volgroup00_size }}

{% endif %}

reboot

#Core only packages
%packages --nobase
@core
%end

#Post tasks
%post

#Install grub on missing RAID1 disk
grub-install /dev/sdb

# Create the .ssh directory for root
mkdir /root/.ssh
chmod 700 /root/.ssh

#Add Ansible key to authorized keys
touch /root/.ssh/authorized_keys
cat > /root/.ssh/authorized_keys << EOF_authorized_keys
{{ ansible_key }}
EOF_authorized_keys
chmod 600 /root/.ssh/authorized_keys

#Allow ssh for ansible only
cat > /etc/sysconfig/iptables << EOF_iptables_rules
*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [60:5848]
:RH-Firewall-1-INPUT - [0:0]
-A INPUT -j RH-Firewall-1-INPUT
-A FORWARD -j RH-Firewall-1-INPUT
-A RH-Firewall-1-INPUT -i lo -j ACCEPT
-A RH-Firewall-1-INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
{% if ansible_server_ips is defined %}
{% for ip in ansible_server_ips %}
-A RH-Firewall-1-INPUT -p tcp -m state --state NEW -m tcp -s {{ ip }} --dport 22 -j ACCEPT
{% endfor %}
{% endif %}
-A RH-Firewall-1-INPUT -j DROP
COMMIT
EOF_iptables_rules

#Disable selinux (editing /etc/sysconfig/selinux destroys symlink, ----follow-symlinks should be used)
sed -i 's/^SELINUX=.*/SELINUX=disabled/g' /etc/selinux/config

#Install simplejson ansible dependency
yum install -y python-simplejson

%end

